name: Build and Publish IPGeoLocator

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'IPGeoLocator'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            runtime: linux-x64
            artifact_name: linux-x64
          - os: windows-latest
            runtime: win-x64
            artifact_name: windows-x64
          - os: macos-latest
            runtime: osx-x64
            artifact_name: macos-x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Setup Git LFS
      run: git lfs checkout

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build application
      run: dotnet build --configuration Release --no-restore

    - name: Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      continue-on-error: true

    - name: Publish application
      run: |
        dotnet publish \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output ./publish/${{ matrix.artifact_name }} \
          -p:PublishSingleFile=true \
          -p:PublishTrimmed=false

    - name: Create archive (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        cd ./publish/${{ matrix.artifact_name }}
        tar -czf ../${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}.tar.gz *

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd ./publish/${{ matrix.artifact_name }}
        Compress-Archive -Path * -DestinationPath ../${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}.zip

    - name: Upload build artifacts (Linux/macOS)
      if: matrix.os != 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}
        path: ./publish/${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}.tar.gz
        retention-days: 30

    - name: Upload build artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}
        path: ./publish/${{ env.PROJECT_NAME }}-${{ matrix.artifact_name }}.zip
        retention-days: 30

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Setup Git LFS
      run: git lfs checkout

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Display artifact structure
      run: ls -la ./artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## IPGeoLocator Release ${{ github.ref_name }}
          
          Cross-platform desktop application for IP address geolocation with threat intelligence capabilities.
          
          ### Downloads
          
          - **Windows x64**: Download the `IPGeoLocator-windows-x64.zip` file
          - **Linux x64**: Download the `IPGeoLocator-linux-x64.tar.gz` file  
          - **macOS x64**: Download the `IPGeoLocator-macos-x64.tar.gz` file
          
          ### Installation
          
          1. Download the appropriate file for your platform
          2. Extract the archive
          3. Run the executable (`IPGeoLocator.exe` on Windows, `IPGeoLocator` on Linux/macOS)
          
          The application is self-contained and includes all required dependencies.
          
          ### Features
          
          - IP Geolocation lookup with geographic information
          - Threat Intelligence from AbuseIPDB and VirusTotal  
          - Local time lookup for IP locations
          - Lookup history with SQLite database
          - Export to JSON, CSV, and TXT formats
          - Multi-language support (English/Vietnamese)
          - Dark/Light theme support
        files: |
          ./artifacts/IPGeoLocator-windows-x64/IPGeoLocator-windows-x64.zip
          ./artifacts/IPGeoLocator-linux-x64/IPGeoLocator-linux-x64.tar.gz
          ./artifacts/IPGeoLocator-macos-x64/IPGeoLocator-macos-x64.tar.gz