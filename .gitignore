# Build results
[Dd]ebug/
[Dd]ebug*/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Visual Studio files
*.user
*.userosscache
*.sln.docstates

# Visual Studio 2015+ cache/options directory
.vs/
*.vs/

# Rider files
.idea/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah test files
_Chutzpah*

# Covering report
coverage/
coverage_html/

# ReSharper
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity
_TeamCity*

# DotCover
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.qfilter
DocProject/Help/*.partials
DocProject/Help/*.HxF

# ClickOnce
publish/

# Publish Data
*.pubxml
*.publishproj

# Microsoft Azure
PublishScripts/
ServiceConfiguration.*.csfg
ServiceDefinition.*.csdef

# Windows Store
AppPackages/
BundleArtifacts/

# MobUser
*.mbuser

# Others
sql/
*.Cache
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.lhp
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node modules
node_modules/

# SASS/SCSS compiler output
.sass-cache/
*.css.map
*.sass.map
*.scss.map

# IDE
*.user
*.userosscache
*.suo
*.cache
*.lock
*.log

# Mac
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \\r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Windows img volume files
pagefile.sys
swapfile.sys

# Linux swap files
*.swp
*.swo

# Temporary files
.tmp
*Temp*
~*

# NuGet
packages/
*.nuget.props
*.nuget.targets

# The packages folder can be ignored because of Package Restore
# (https://docs.microsoft.com/en-us/nuget/reference/packages-config#package-restore)
# unless there is a packages.config file in the repository
# Uncomment next line if necessary
# !packages/*/packages.config

# Grunt intermediate and output files
gruntfile.js
Gruntfile.js

# Bower
bower_components/

# Yeoman
.yo-rc.json
.yo/

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Environment files
.env
.venv
env/
venv/

# Vagrant
.vagrant/

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Rider
.idea/
*.iws

# VS Code
.vscode/

# Database files
*.db
*.sqlite
*.sqlite3

# Coverage reports
coverage/
coverage_html/
*.coverage
*.coveragexml

# Benchmark results
BenchmarkDotNet.Artifacts/

# Avalonia
*.avalonia.dll

# Local database
*.db-shm
*.db-wal

# User secrets
secrets.json